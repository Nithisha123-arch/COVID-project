/*
Covid 19 Data Exploration 
/*

SELECT *
FROM covidvaccinations
ORDER BY 3,4;


-- Select Data that we are going to be starting with
SELECT *
FROM coviddeaths
ORDER BY 3,4;


-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country

SELECT 
location,
date,
total_cases,
total_deaths,
(total_deaths/total_cases)*100 as 'Death Percentage'
FROM coviddeaths
WHERE location like '%India%'
ORDER BY 1,2;


-- Total Cases vs Population
-- Shows what percentage of population infected with Covid

SELECT 
location,population,MAX(total_cases) as 'Highest Infection Count'
WHERE location like '%India%'
GROUP BY Location,population
ORDER BY Percent_Population_Infected DESC;


-- Countries with Highest Infection Rate compared to Population

SELECT 
location,population,MAX(total_cases) as 'Highest Infection Count', max(total_deaths/total_cases)*100 as 'Percent_Population_Infected'
FROM coviddeaths
WHERE location like '%India%'
GROUP BY Location,population
ORDER BY Percent_Population_Infected DESC;

-- Countries with Highest Death Count per Population

SELECT location, max(total_deaths) AS TotalDeathCount
FROM coviddeaths
WHERE location like '%India%'
WHERE location is NOT NULL
GROUP BY Location
ORDER BY TotalDeathCount DESC;



-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

Select continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From CovidDeaths
--Where location like '%India%'
Where continent is not null 
Group by continent
order by TotalDeathCount desc



-- GLOBAL NUMBERS

SELECT 
date,
sum(new_cases) AS Total_cases,
SUM(new_deaths) AS Total_deaths,
SUM(new_deaths)/SUM(new_cases)*100 as DeathPercentage
FROM coviddeaths
WHERE continent is not null
-- GROUP BY date
ORDER BY 1,2;



-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT coviddeaths.continent,coviddeaths.location,coviddeaths.date,coviddeaths.population,covidvaccinations.new_vaccinations,
SUM(covidvaccinations.new_vaccinations) OVER (PARTITION BY coviddeaths.location ORDER BY coviddeaths.location,coviddeaths.date) AS RollingPeopleVaccinated
FROM coviddeaths
JOIN covidvaccinations
ON coviddeaths.location=covidvaccinations.location 
AND coviddeaths.date=covidvaccinations.date 
WHERE coviddeaths.continent is not null
ORDER BY 2,3;


-- Using CTE to perform Calculation on Partition By in previous query

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
SELECT coviddeaths.continent,coviddeaths.location,coviddeaths.date,coviddeaths.population,covidvaccinations.new_vaccinations,
SUM(covidvaccinations.new_vaccinations) OVER (PARTITION BY coviddeaths.location ORDER BY coviddeaths.location,coviddeaths.date) AS RollingPeopleVaccinated
FROM coviddeaths
JOIN covidvaccinations
ON coviddeaths.location=covidvaccinations.location 
AND coviddeaths.date=covidvaccinations.date 
WHERE coviddeaths.continent is not null
ORDER BY 2,3;
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac

-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
SELECT coviddeaths.continent,coviddeaths.location,coviddeaths.date,coviddeaths.population,covidvaccinations.new_vaccinations,
SUM(covidvaccinations.new_vaccinations) OVER (PARTITION BY coviddeaths.location ORDER BY coviddeaths.location,coviddeaths.date) AS RollingPeopleVaccinated
FROM coviddeaths
JOIN covidvaccinations
ON coviddeaths.location=covidvaccinations.location 
AND coviddeaths.date=covidvaccinations.date 
WHERE coviddeaths.continent is not null
